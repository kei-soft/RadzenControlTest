@page "/weather"
@inject HttpClient Http

<RadzenButton Text="ADD" Click=@AddRow />
<RadzenGrid @ref="grid" TItem="IDictionary<string, object>">
    <Columns>

        @foreach (var column in columns)
        {
            <RadzenDataGridColumn TItem="IDictionary<string, object>" Title="@column.Key" Type="column.Value"
                                   Property="@GetColumnPropertyExpression(column.Key, column.Value)">
                <Template>
                    @context[@column.Key]
                </Template>
            </RadzenDataGridColumn>
        }

    </Columns>
</RadzenGrid>

@code {
    private RadzenGrid<IDictionary<string, object>>? grid;

    protected override async Task OnInitializedAsync()
    {
        await Task.CompletedTask;
    }

    public IDictionary<string, Type> columns { get; set; } = new Dictionary<string, Type>();

    private void AddRow()
    {
        columns.Add("TEST", typeof(string));
        StateHasChanged();
    }

    public string GetColumnPropertyExpression(string name, Type type)
    {
        var expression = $@"it[""{name}""].ToString()";

        if (type == typeof(int))
        {
            return $"int.Parse({expression})";
        }
        else if (type == typeof(DateTime))
        {
            return $"DateTime.Parse({expression})";
        }

        return expression;
    }
}
